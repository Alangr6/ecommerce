
/////////////////////////////////////////////////
<TableContainer component={Paper}>
  <Table className="product-product-screen-table" aria-label="simple table">
    <TableBody>
      <TableRow key={product.id}>
        <TableCell
          className={classes.padding}
          component="th"
          scope="row"
        >
          Precio:
        </TableCell>
        <TableCell className={classes.padding} align="right">
          {prices.map((price) => {
            return accounting.formatMoney(
              price.unit_amount / 100,
              "â‚¬"
            );
          })}
        </TableCell>
      </TableRow>
      <TableRow>
        <TableCell
          className={classes.padding}
          component="th"
          scope="row"
        >
          Estado:
        </TableCell>
        <TableCell className={classes.padding} align="right">
          en Stock
        </TableCell>
      </TableRow>
      <TableRow>
       {/*  <TableCell component="th" scope="row">
          <select
            className="add-cart-select"
            name=""
            id=""
            onChange={(e) => setQuantity(e.target.value)}
            value={quantity}
          >
            {[...Array(product.stock).keys()].map((x) => {
              return (
                <option key={x + 1} value={x + 1}>
                  {x + 1}
                </option>
              );
            })}
          </select>{" "}
        </TableCell> */}
      </TableRow>
      <TableRow>
        <TableCell className={classes.padding}>
          <button onClick={addToBasket} className="add-cart-button">
            Anadir al carrito
          </button>
        </TableCell>
      </TableRow>
    </TableBody>
  </Table>
</TableContainer>
////////////////////////////////
<div>
            {orders.length !== 0 ? (
              <table className="order-table">
                <thead className="order-table-thead">
                  <tr>
                    <th className="order-table-title">ID Pedido</th>
                    <th className="order-table-title">Pedidos</th>
                    <th className="order-table-title">Precio total</th>
                    <th className="order-table-title">Pago</th>
                  </tr>
                </thead>
                <tbody className="order-table-tbody">
                  {orders.map((order, index) => {
                    
                      return (
                        <tr className="order-table-tr" key={index}>
                          <td className="order-table-data-id">{order.id}</td>
                          <td className="order-table-data-orders">
                              {numberItems.length === 0
                                ? "cargando"
                                : numberItems[index].map((i) => {
                                    return (
                                      <p>
                                        {" "}
                                        {i.count} {i.description}
                                      </p>
                                    );
                                  })}
                              &nbsp;
                          </td>

                          <td className="order-table-data">
                            {order.amount < 7000
                              ? (order.amount + 700) / 100
                              : order.amount / 100}
                          </td>

                          <td className="order-table-data">Completado</td>
                        </tr>
                      );
                    
                  })}
                </tbody>
              </table>
            ) : (
              <h4>No se registra ningun pedido realizado</h4>
            )}
          </div>