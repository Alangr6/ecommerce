import React from "react";
import { MyAccount } from "../account/MyAccount";

export const CreateUser = () => {
  return (
    <div>
      <MyAccount></MyAccount>
      <h1 className='title-user'>Crear Usuario</h1>
      <form >
        <div className="form-user">
          <label className="label-user">Nombre </label>
          <input type="text" className="input-user" />
        </div>
        <div className="form-user">
          <label className="label-user">Email</label>
          <input type="email" className="input-user" />
        </div>
        <div className="form-user">
          <label className="label-user">Contrasena</label>
          <input type="password" className="input-user" />
        </div>
        <div className="form-user">
          <button type="submit" className="form-button">
            Crear Usuario
          </button>
        </div>
      </form>
    </div>
  );
};
///////////////////////////////////////////////////
import React from 'react'
import { MyAccount } from '../account/MyAccount'

export const Login = () => {
  return (
<div>
      <MyAccount></MyAccount>
      <h1 className='title-user'>Iniciar Sesion</h1>
      <form >

        <div className="form-user">
          <label className="label-user">Email</label>
          <input type="email" className="input-user" />
        </div>
        <div className="form-user">
          <label className="label-user">Contrasena</label>
          <input type="password" className="input-user" />
        </div>
        <div className="form-user">
          <button type="submit" className="form-button">
            Iniciar sesion
          </button>
        </div>
      </form>
    </div>    
  )
}

<div className="stars">
  {Array(5)
    .fill()
    .map((_, i) => (
      <p>&#11088;</p>
    ))}
</div>
////////////////////////////////////////////
async function userData(idDoc) {
  const docRef = doc(db, `users/${idDoc}`);
  const query = await getDoc(docRef);
  if (query.exists()) {
    const infoUser = query.data();
    return infoUser;
  } else {
    await setDoc(docRef, { reaction: [...fakeData] });
    const query = await getDoc(docRef);
    const infoUser = query.data();
    return infoUser.reaction;
  }
}

case "ADD_TO_BASKET":{
  let newItem = state.basket.find(
    (item) => item.id === action.item
  )
  console.log(newItem);
  let itemInBasket = state.basket.find(item => item.id === newItem.id )

  return itemInBasket ? {
    ...state,
    basket: state.basket.map(item => item.id === newItem.id ? {...item,quantity:item.quantity+1}
      : item)
  } : {
    ...state,
    basket: [...state.basket, {newItem,quantity:1}],
  }
 }
///////////////////////////////
{/*  <Grid className={classes.checkout} container spacing={3}>
  <Grid item xs={12} md={6}>
    <TextField
      required
      id="cardName"
      label="Name on card"
      fullWidth
      autoComplete="cc-name"
    />
  </Grid>
  <Grid item xs={12} md={6}>
    <TextField
      required
      id="cardNumber"
      label="Card number"
      fullWidth
      autoComplete="cc-number"
    />
  </Grid>
  <Grid item xs={12} md={6}>
    <TextField
      required
      id="expDate"
      label="Expiry date"
      fullWidth
      autoComplete="cc-exp"
    />
  </Grid>
  <Grid item xs={12} md={6}>
    <TextField
      required
      id="cvv"
      label="CVV"
      helperText="Last three digits on signature strip"
      fullWidth
      autoComplete="cc-csc"
    />
  </Grid>
  <Grid item xs={12}>
    <FormControlLabel
      control={
        <Checkbox color="secondary" name="saveCard" value="yes" />
      }
      label="Remember credit card details for next time"
    />
  </Grid>
  
</Grid> */}
////////////////////////////
<div className="product-screen-stars">
  {Array(5)
    .fill()
    .map((_, i) => (
      <p>&#11088;</p>
    ))}
</div>